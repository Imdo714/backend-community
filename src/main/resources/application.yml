server:
  port: 8080

spring:
  application:
    name: community

  datasource:
    url: "${DB_URL}"
    username: "${DB_NAME}"
    password: "${DB_PWD}"
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  jwt:
    header: Authorization
    secret: "${JWT_SECRET}"
    token-validity-in-seconds: "${JWT_VALIDITY_SECONDS}"

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "${GOOGLE_CLIENT_ID}"
            client-secret: "${GOOGLE_CLIENT_SECRET}"
            redirect-uri: "${GOOGLE_REDIRECT_URL}"
            scope:  openid, email, profile
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

  cloud:
    aws:
      s3:
        bucket: "${S3_BUCKET_NAME}"
      credentials:
        access-key: "${S3_ACCESS_KEY}"
        secret-key: "${S3_SECRET_KEY}"
      region:
        static: ap-northeast-2
        auto: false
      stack:
        auto: false